{"version":3,"sources":["_normalize.scss","base/_forms.scss","base/_typography.scss","base/_variables.scss","main.css","base/_game.scss","base/_header.scss","bourbon/addons/_prefixer.scss","bourbon/css3/_flex-box.scss","base/_base.scss","neat/grid/_box-sizing.scss","bourbon/css3/_font-face.scss","base/_fonts.scss","bourbon/helpers/_font-source-declaration.scss","bourbon/addons/_font-stacks.scss","bourbon/functions/_modular-scale.scss","base/_buttons.scss","bourbon/functions/_shade.scss","base/_lists.scss","base/_navigation.scss","bourbon/helpers/_directional-values.scss","base/_leaderboard.scss","neat/grid/_media.scss","neat/grid/_outer-container.scss","bourbon/functions/_px-to-em.scss","bourbon/addons/_clearfix.scss","neat/grid/_span-columns.scss","neat/grid/_private.scss","base/_profile.scss","bourbon/css3/_background.scss","bourbon/functions/_tint.scss","neat/grid/_pad.scss"],"names":[],"mappings":"4EAAm4B,GAAmsB,mBAAiD,WAAW,YCAloD,SC6CA,ED1CE,OAAQ,EAAE,EEiBU,MHpByM,QAAQ,MAAM,QAAQ,WAAW,OAAO,OAAO,OAAO,OCOrR,MACA,MDR4R,KAAK,KAAK,IAAI,QCS1S,ODTkT,QCUhT,QAAS,MGiBX,SHZA,WDf2c,SCwBvc,QAAS,KA4Db,2BDpFkgB,SAAS,QC4GrgB,QAAS,EIjGf,MCXA,OCmCQ,uBDjCkB,ICqClB,eC6GQ,OFpJhB,uBAAA,qBCmCQ,mBDrBgB,OAWpB,WAAY,OAUhB,gBNnCke,EMwG9d,gBAAiB,KGvFrB,WAdA,KAeE,WAAY,KTlB8D,IAAI,OAAO,OAAO,EAAG,OAAO,GAAG,GAAG,QAAQ,EAAG,KAAK,YAAY,WAAY,qBAAqB,KAAM,yBAAyB,KAA+H,MAAM,OAAO,SAAS,MAAM,QAAQ,aAAc,eAAe,SAAU,sBAAsB,QAAQ,KAAM,OAAO,EAAmC,EAAE,iBAAiB,YEoDnf,WAAY,MCSG,MACA,KH9D6gB,YAAY,cAAc,IAAA,OAAY,EAAE,SAAS,OAAO,YAAY,IAAK,IAAI,WAAW,OAA0C,KAAK,WAAW,KAAM,MAAM,KAAM,MAAM,UAAU,IAAK,IAAI,IAAI,UAAU,IAAK,YAAY,EAAG,SAAS,SAAU,eAAe,SAAU,IAAI,IAAI,MAAO,IAAI,OAAO,OAAQ,eAAe,SAAS,OAAQ,OAAO,OAAO,IAAA,KAAU,GAA2B,OAAO,EE8Dn6B,cCRmB,IAAI,MAzBjB,QDkCN,YAAa,EACb,aAAc,EACd,WAAY,EACZ,OC/CoB,MD+CE,EFlEg5B,IAAI,SAAS,SAAS,KAAM,KAAK,IAAI,IAAI,KAAK,YAAY,UAAA,UAAqB,UAAU,IAAK,OAAO,MAAM,SAAS,OAAO,SAAS,MAAM,QAAS,KAAK,QAAS,OAAO,EAAG,OAAO,SAAS,QAAS,OAAO,OAAO,eAAe,KAAM,OAAO,wBAAwB,kBAAkB,mBAAmB,mBAAmB,OAAQ,OAAO,QAAS,iBAAiB,qBAAqB,OAAO,QAAS,yBAAyB,wBAAwB,OAAO,EAAG,QAAQ,EAAG,MAAM,YAAY,OAAQ,qBAAqB,kBAAkB,WAAW,WAAY,QAAQ,EAAG,8CAA8C,8CAA8C,OAAO,KAAM,mBAAmB,mBAAmB,UAAmC,iDAAiD,8CAA8C,mBAAmB,KAAkF,MAAM,gBAAgB,SAAU,eAAe,EUOh4D,EAAA,QAAA,SAII,WAAY,QCDhB,WACE,YCVe,WDWf,WARM,OASN,YCZsE,ODctE,IEqBuB,sDAAA,4BAfW,iDAeX,gBAdM,gDAcN,eAbK,+CAaL,mBAZI,0DAYJ,cF1BzB,WACE,YCRe,UDSf,WARM,OASN,YCVoE,IDYpE,IEqBuB,qDAAA,4BAfW,gDAeX,gBAdM,+CAcN,eAbK,8CAaL,mBAZI,wDAYJ,cF1BzB,WACE,YCNe,aDOf,WARM,OASN,YCR0E,IDU1E,IEqBuB,wDAAA,4BAfW,mDAeX,gBAdM,kDAcN,eAbK,iDAaL,mBAZI,8DAYJ,cF1BzB,WACE,YCJe,WDKf,WARM,OASN,YCNsE,QDQtE,IEqBuB,sDAAA,4BAfW,iDAeX,gBAdM,gDAcN,eAbK,+CAaL,mBAZI,0DAYJ,cF1BzB,WACE,YCFe,YDGf,WCHgF,ODIhF,YCJwE,IDMxE,IEqBuB,uDAAA,4BAfW,kDAeX,gBAdM,iDAcN,eAbK,gDAaL,mBAZI,4DAYJ,cXpC3B,MACE,MC4BM,QD3BN,YCDqB,aWWX,iBAAkB,UAAa,OAAU,MAAS,WZT5D,sBAAuB,OAAA,OAAA,OACvB,UawCY,QbvCZ,YCUqB,IDPvB,GACA,GACA,GACA,GACA,GACA,GACE,YCEqB,IDDrB,OAAQ,EAAE,ECKU,MDFtB,GACE,YCjBqB,WWUX,iBAAkB,UAAa,OAAU,MAAS,WZQ5D,UawBY,UbtBd,GAIA,GAIA,GACA,GACA,GACE,YC9BqB,UWSX,iBAAkB,UAAa,OAAU,MAAS,WZU9D,GAEE,UaoBY,UblBd,GAEE,UagBY,Ubdd,GACA,GACA,GAEE,UaUY,QbNd,YAEI,YCpCmB,WWQX,iBAAkB,UAAa,OAAU,MAAS,WZ6B1D,UaoBU,SC7Dd,OfOA,MePQ,mBAAsB,kBAAqB,mBfQnD,MACA,OAwBE,YEhCqB,aWWX,iBAAkB,UAAa,OAAU,MAAS,WbsB5D,UcUY,QbKd,SAAA,QAAA,QAQI,MenCM,Qf+CV,IACA,QACE,OAAQ,EACR,UAAW,KcxEb,OAAQ,mBAAsB,kBAAqB,mBACjD,WAAY,KACZ,iBb0BM,QazBN,OAAQ,IAAI,Mb0BN,QazBN,MbyBM,QaxBN,OAAQ,QACR,QAAS,aAGT,uBAAwB,YACxB,YAAa,IACb,YAAa,EACb,QbQoB,MADA,MaNpB,gBAAiB,KACjB,WAAY,iBb+CG,MACA,Ka/Cf,YAAa,KACb,eAAgB,OAChB,YAAa,OAjBf,aAAA,aAAQ,yBAAA,yBAAsB,wBAAA,wBAAqB,yBAAA,yBAqB/C,iBbUK,KaTL,MbOI,Qa7BR,gBAAQ,4BAAsB,2BAAqB,4BA0B/C,OAAQ,YACR,QAAS,GA3Bb,sBAAQ,kCAAsB,iCAAqB,kCA8B7C,iBbCG,KF/BT,SACE,iBE2BM,QF1BN,OEoDmB,IAAI,MAzBjB,QFzBN,QEeoB,MFJtB,MACE,YAAa,IACb,cAAe,OAFjB,sBAKI,QAAS,IAQkS,kBAA/S,kBAAqB,iBAAoB,qBAAwB,2BAA8B,kBAAqB,kBAAqB,mBAAsB,qBAAwB,mBAAsB,gBAAmB,iBAAoB,iBAAoB,gBAAmB,iBAC3R,0BADkU,SAChU,iBEDM,QFEN,OAAQ,KACR,cEuBmB,IAAI,MAzBjB,QFGN,WAAY,WACZ,YEhCqB,aWWX,iBAAkB,UAAa,OAAU,MAAS,WbsB5D,UcUY,QdTZ,cEfoB,MFgBpB,QAAS,KACT,WAAY,aEwBG,MACA,KFxBf,MAAO,KAVsS,8CAA/S,8CAAqB,6CAAoB,iDAAwB,uDAA8B,8CAAqB,8CAAqB,+CAAsB,iDAAwB,+CAAsB,4CAAmB,6CAAoB,6CAAoB,4CAAmB,6CAC3R,sDADkU,qCAYlS,MEXxB,QFDuS,oCAA/S,oCAAqB,mCAAoB,uCAAwB,6CAA8B,oCAAqB,oCAAqB,qCAAsB,uCAAwB,qCAAsB,kCAAmB,mCAAoB,mCAAoB,kCAAmB,mCAC3R,4CADkU,2BAa5S,MEZd,QFDuS,qCAA/S,qCAAqB,oCAAoB,wCAAwB,8CAA8B,qCAAqB,qCAAqB,sCAAsB,wCAAwB,sCAAsB,mCAAmB,oCAAoB,oCAAoB,mCAAmB,oCAC3R,6CADkU,4BAc5S,MEbd,QFDuS,yCAA/S,yCAAqB,wCAAoB,4CAAwB,kDAA8B,yCAAqB,yCAAqB,0CAAsB,4CAAwB,0CAAsB,uCAAmB,wCAAoB,wCAAoB,uCAAmB,wCAC3R,iDADkU,gCAexS,MEdlB,QFDuS,wBAA/S,wBAAqB,uBAAoB,2BAAwB,iCAA8B,wBAAqB,wBAAqB,yBAAsB,2BAAwB,yBAAsB,sBAAmB,uBAAoB,uBAAoB,sBAAmB,uBAC3R,gCADkU,eAkB9T,agBxBM,QhBMqS,wBAA/S,wBAAqB,uBAAoB,2BAAwB,iCAA8B,wBAAqB,wBAAqB,yBAAsB,2BAAwB,yBAAsB,sBAAmB,uBAAoB,uBAAoB,sBAAmB,uBAC3R,gCADkU,eAsB9T,aErBI,QFsBJ,QAAS,EAvBkS,2BAA/S,2BAAqB,0BAAoB,8BAAwB,oCAA8B,2BAAqB,2BAAqB,4BAAsB,8BAAwB,4BAAsB,yBAAmB,0BAAoB,0BAAoB,yBAAmB,0BAC3R,mCADkU,kBA2B9T,iBgBjCM,QhBkCN,OAAQ,YAKZ,SACE,OAAQ,SAGV,mBACE,WAAY,KAGd,qBACA,kBACE,QAAS,OACT,aAAc,OAHhB,2BACA,wBAKI,QAAS,aAIb,iBACE,cE5DoB,MF6DpB,MAAO,KAGT,cACE,QAAS,EACT,OAAQ,EAAA,KACR,OEjCmB,IAAI,MAzBjB,QF2DN,MAAO,IACP,SAAU,OACV,WAAuD,6CE9D1C,MF8DwD,UAAb,QACxD,gBAAiB,IAAA,IiBxEnB,MAlBA,GADA,GA4BI,OAAQ,EjBwDZ,oBASI,iBErES,QF4Db,qBAYI,QAAS,KACT,OAAQ,KACR,WAAY,KACZ,iBAAkB,YAClB,iBAAkB,KAClB,mBAAoB,KACpB,gBAAiB,KACjB,WAAW,KAGX,MAAO,KI/DX,Mc3CA,Id4CE,aFUmB,IAAI,MAzBjB,QGMR,QAnCA,OA6CE,WHjBM,Qe3BR,GADA,GAEE,gBAAiB,KAEjB,QAAS,EAeX,GACE,cfAoB,MeDtB,MAII,YAAa,IACb,WfJkB,MGpBtB,OEqEI,QAAS,YACT,QAAS,SACT,QAAS,IAGT,QAAS,aACT,QAAS,UACT,QAAS,YACT,QAAS,KD1CL,mBCoFS,WDhFT,gBCgFS,WDpET,WCoES,WDpFT,sBCiFM,OD7EN,mBC6EM,ODjEN,cCiEM,OD7EN,oBDrCkB,ICiDlB,eDjDkB,IEwIxB,mBFxIwB,ICiClB,kBCiHQ,ODjGR,UCiGQ,ODjHR,kBDhCa,OCoCb,eDpCa,OCwCb,cDxCa,OCgDb,UDhDa,OCgCb,iBD/BmB,OCmCnB,cDnCmB,OC+CnB,SD/CmB,OC+BnB,wBD/BmB,OCmCnB,qBDnCmB,OCuCnB,oBDvCmB,OC2CnB,mBD3CmB,OC+CnB,gBD/CmB,OE0NzB,cF1NyB,OC+BnB,sBD9BiB,OCkCjB,mBDlCiB,OC8CjB,cD9CiB,OEwRvB,mBFxRuB,OAEvB,cAAe,IAAI,MHsBb,QGrBN,MAAO,KACP,MAAO,McoFL,QdnFe,KAAM,IAAI,KAAM,IAVnC,qBCmCQ,0BDtBW,EC0BX,uBD1BW,ECsCX,kBDtCW,ECsBX,cDtBW,EC0BX,WD1BW,ECsCX,MDtCW,EEoKjB,eFpKiB,EC0BX,gBDzBgB,OCqChB,WDrCgB,OEyPtB,oBFzPsB,OACpB,US6BU,UT5BV,YHdmB,WWUX,iBAAkB,UAAa,OAAU,MAAS,WRM1D,MAAO,Ke0BX,cACA,gBFrBA,MEsBE,YlB3CqB,UWSX,iBAAkB,UAAa,OAAU,MAAS,WRZ9D,uBCmCQ,0BDdW,ECkBX,uBDlBW,EC8BX,kBD9BW,ECcX,cDdW,ECkBX,WDlBW,EC8BX,MD9BW,EE4JjB,eF5JiB,ECcX,mBDbgB,KCiBhB,gBDjBgB,KC6BhB,WD7BgB,KE6KtB,wBF7KsB,KCiBhB,gBDhBgB,OC4BhB,WD5BgB,OEgPtB,oBFhPsB,OACpB,MAAO,KAWX,QAWE,QH3BoB,MG4BpB,MAAO,KACP,cAAe,EgBUb,mChBvBJ,QAgBI,QAAS,cAhBb,wBiBHE,UCrBS,KDsBT,YACQ,KADR,aAES,KjBAX,+BmBfI,MAAO,KACP,QAAS,GACT,QAAS,MHoCT,mChBvBJ,wBAsBM,QAAS,OAtBf,qBA2BI,aAAc,IACd,cAAe,IA5BnB,yBA+BM,OAAQ,MACR,WHrCA,QmB4BF,sChBvBJ,qBAoCM,MAAO,KACP,cAAe,GArCrB,WA6CI,YAAa,MACb,OAAQ,EAAA,EAAA,IACR,QAAS,EA/Cb,cA0DI,WAAY,KACZ,cAAe,IA3DnB,gBAoEI,MH1EI,QGMR,sBAAA,sBAyEM,MHpFO,QgBxBb,IAwBA,MAME,MhBFM,QmB8BJ,sChBvBJ,WAkDM,MAAO,KACP,YAAa,MACb,YAAa,IACb,cAAe,EArDrB,cA8DM,QAAS,OACT,WAAY,KA/DlB,gCA+EM,MAAO,OA/Eb,mCAmFM,UAAW,KAnFjB,iDAuFM,OAAQ,IAAA,EAAA,EgBhEV,sChBvBJ,iDA0FQ,MAAO,MACP,WAAY,GA3FpB,oDA+FQ,UAAW,IACX,MAAO,KACP,YAAa,EACb,OAAQ,EACR,cAAe,KDrIvB,UgBAA,gBAQI,WAAY,KZgFd,WAAY,OHtDd,+DAsGU,cAAe,EAtGzB,sDA2GM,USlGQ,QMcd,cACA,gBFnCA,MEoCE,UNhBY,UTTd,qDA8GQ,OAAQ,MACR,QAAS,GACT,QAAS,IGhJjB,KAHA,KAME,OAAQ,KH6BV,2DAAA,2DAoHU,QAAS,EavJnB,IOmEI,MAAM,KAkBJ,aCtEI,SDuEJ,MC5EI,UnB2DN,QAAS,YACT,QAAS,SACT,QAAS,IAGT,QAAS,aACT,QAAS,UACT,QAAS,YACT,QAAS,KD1CL,mBCyFS,SDrFT,gBCqFS,SDzET,WCyES,SDzFT,sBCiFM,OD7EN,mBC6EM,ODjEN,cCiEM,ODjFN,uBYhCkB,OZoClB,oBYpCkB,OZgDlB,eYhDkB,OXuIxB,mBWvIwB,OZgClB,iBY/BmB,OZmCnB,cYnCmB,OZ+CnB,SY/CmB,OZ+BnB,wBY/BmB,OZmCnB,qBYnCmB,OZuCnB,oBYvCmB,OZ2CnB,mBY3CmB,OZ+CnB,gBY/CmB,OX0NzB,cW1NyB,OZ+BnB,kBY9Be,QZkCf,eYlCe,QZ8Cf,UY9Ce,QZ8Bf,oBY9Be,QZkCf,iBYlCe,QZsCf,gBYtCe,QZ0Cf,eY1Ce,QZ8Cf,YY9Ce,QXgPrB,eWhPqB,QACrB,SAAU,MACV,IAAK,EACL,KAAM,EACN,OAAQ,EACR,WhBeK,QgBZL,WAAY,IAAI,IAAI,IAAI,QAb1B,eOyFQ,aAA6B,EJHjC,oCHtFJ,IOmEI,MAAM,KAWJ,MAAO,UlBTT,QAAS,YACT,QAAS,SACT,QAAS,IAGT,QAAS,aACT,QAAS,UACT,QAAS,YACT,QAAS,KD1CL,mBCyFS,SDrFT,gBCqFS,SDzET,WCyES,SDzFT,sBCiFM,OD7EN,mBC6EM,ODjEN,cCiEM,ODjFN,uBYjBoB,OZqBpB,oBYrBoB,OZiCpB,eYjCoB,OXwH1B,mBWxH0B,OZiBpB,iBYhBqB,OZoBrB,cYpBqB,OZgCrB,SYhCqB,OZgBrB,wBYhBqB,OZoBrB,qBYpBqB,OZwBrB,oBYxBqB,OZ4BrB,mBY5BqB,OZgCrB,gBYhCqB,OX2M3B,cW3M2B,OZgBrB,kBYfiB,QZmBjB,eYnBiB,QZ+BjB,UY/BiB,QZejB,oBYfiB,QZmBjB,iBYnBiB,QZuBjB,gBYvBiB,QZ2BjB,eY3BiB,QZ+BjB,YY/BiB,QXiOvB,eWjOuB,QApBzB,eOiFQ,MCvEE,URcV,MZWQ,iBYVQ,EZcR,cYdQ,EZ0BR,SY1BQ,EZUR,aYVQ,EZcR,UYdQ,EZkBR,SYlBQ,EZ0BR,KY1BQ,EAGd,YAAa,IACb,YAAa,IAEb,WAAY,OAwBZ,WAAY,IAAI,MhB3BV,QMlBR,EUcA,YVbE,MNkBM,QgBLR,QASI,QAAS,KATb,YAYI,WhBZS,QmB8DT,qCH9DJ,MAgBI,YAAa,IACb,YAAa,KG6Cb,oCH9DJ,MAoBI,YAAa,IApBjB,QAsBM,QAAS,MAtBf,WAyBM,QAAS,MdtCf,MgBVA,aboEI,QAAS,YACT,QAAS,SDnCL,sBCiFM,OD7EN,mBC6EM,ODjFN,kBCiHQ,ODjHR,sBFfiB,OEmBjB,mBFnBiB,OcqCzB,oBACE,WAAY,KG4BV,oCjBrFJ,OAOI,MAAO,MAGX,MACE,WFgBM,QEfN,OFyCmB,IAAI,MAzBjB,QEfN,WAAY,EAAE,IAAI,IAAI,QACtB,cAAe,IACf,WAAY,OGuDV,QAAS,IAGT,QAAS,aACT,QAAS,UACT,QAAS,YACT,QAAS,KD1CL,mBCoFS,WDhFT,gBCgFS,WDpET,WCoES,WDpET,cCiEM,OD7EN,oBFrBkB,IEiClB,eFjCkB,IGwHxB,mBHxHwB,IEiClB,UCiGQ,ODjHR,kBFhBa,OEoBb,eFpBa,OEwBb,cFxBa,OEgCb,UFhCa,OEgCb,cF/BiB,OGyQvB,mBHzQuB,OAIzB,WACE,MAAO,KACP,QAAU,MAAA,IAAA,IAFZ,cAII,YAAa,MAMjB,MADA,MAEE,WYbQ,QZYV,YADA,YEEQ,mBFEgB,IAAI,IAAK,YEEzB,gBFFgB,IAAI,IAAK,YEczB,WFdgB,IAAI,IAAK,YAC7B,WFdS,QEeT,OAAQ,QAOZ,MACE,YFOmB,IAAI,MAzBjB,QkB5BR,absEI,QAAS,IAGT,QAAS,aACT,QAAS,UACT,QAAS,YACT,QAAS,KD1CL,mBCyFS,SDrFT,gBCqFS,SDzET,WCyES,SDzET,cCiEM,ODjFN,uBchCkB,OdoClB,oBcpCkB,OdgDlB,echDkB,ObuIxB,mBavIwB,OdoClB,eC6GQ,ODjGR,UCiGQ,ODjHR,kBc/Ba,OdmCb,ecnCa,OduCb,ccvCa,Od+Cb,Uc/Ca,Od+Bb,iBC2KQ,MDvKR,cCuKQ,MD3JR,SC2JQ,MD3KR,wBc9BmB,WdkCnB,qBclCmB,WdsCnB,oBctCmB,Wd0CnB,mBc1CmB,Wd8CnB,gBc9CmB,WbyNzB,cAhBc,MD3JR,cc7CiB,ObuRvB,mBavRuB,OACvB,MAAO,KAOT,yBACE,MAAO,KACP,OlBsCmB,IAAI,MAzBjB,QkBTR,qBADA,qBbkDI,QAAS,YACT,QAAS,SACT,QAAS,IAGT,QAAS,aACT,QAAS,UACT,QAAS,YACT,QAAS,KD1CL,mBCoFS,WDhFT,gBCgFS,WDpET,WCoES,WDpFT,sBCiFM,OD7EN,mBC6EM,ODjEN,cCiEM,ODjFN,uBcbkB,IdiBlB,oBcjBkB,Id6BlB,ec7BkB,IboHxB,mBapHwB,IdalB,kBCiHQ,OD7GR,eC6GQ,ODjGR,UCiGQ,ODjHR,kBcZa,OdgBb,echBa,OdoBb,ccpBa,Od4Bb,Uc5Ba,OdYb,iBcXmB,OdenB,ccfmB,Od2BnB,Sc3BmB,OdWnB,wBcXmB,OdenB,qBcfmB,OdmBnB,oBcnBmB,OduBnB,mBcvBmB,Od2BnB,gBc3BmB,ObsMzB,catMyB,OdWnB,sBcViB,OdcjB,mBcdiB,Od0BjB,cc1BiB,OboQvB,mBapQuB,OACvB,YAAa,IACb,WlBCM,QkBAN,clB0BmB,IAAI,MAzBjB,QkBER,kCACE,OAAQ,KAkBV,qBO5CA,qBAGI,OzB6CiB,IAAI,MAzBjB,QkBOR,cAEA,gBADA,cAFA,iBAIA,gBACE,MAAO,KACP,WAAY,OdNN,mBcOc,OdHd,gBcGc,OdSd,WcTc,Ob6NpB,oBa7NoB,OAEtB,cACA,gBAEE,UNHY,UMMd,iBdfQ,mBcgBc,KdZd,gBcYc,KdAd,WcAc,KbgJpB,wBahJoB,KACpB,QAAS,MAAA,IAAA,IOpDX,YAEI,WAAY,OAIhB,qBAEI,MAAO,MAEP,QAAS,MACT,OAAQ,IAAA,KnBXZ,KCII,WAAY,WDDhB,KACE,WNwBM,QMrBN,OAAQ,EAGV,QAGI,MNWS,QMHb,iBACE,QAAS,GACT,QAAS,MAMX,OACE,MAAO,KAGT,MACE,OAAQ,MoBkBR,WpBjBoB,kCAAA,UACpB,wBAAyB,MACzB,qBAAsB,MACtB,mBAAoB,MACpB,gBAAiB,MAGnB,eACE,WqBrBQ,qBrBsBR,MAAO,IACP,OAAQ,EAAA,KACR,WAAY,OAOd,eiBcI,MAAM,KAGJ,QAAS,MAQT,MAAO,UjBvBX,WN3BM,QM4BN,OAAQ,MACR,OAAQ,KACR,cNJmB,IAAI,MAzBjB,QM8BN,aNLmB,IAAI,MAzBjB,QMwBR,0BiB4BQ,MCvEE,UlB8DR,aAAc,KacZ,qCbjCJ,eiBcI,MAAM,KAGJ,QAAS,MAQT,MAAO,UjBzBb,0BiB4BQ,MCvEE,WL4EN,oCbjCJ,eiBcI,MAAM,KAGJ,QAAS,MAQT,MAAO,UjBbT,MAAO,IAZX,0BiB4BQ,MCvEE,WL4EN,oCbjCJ,eiBcI,MAAM,KAGJ,QAAS,MAQT,MAAO,WjBzBb,0BiB4BQ,MCvEE,ML4EN,oCbfJ,0BAGI,MAAO,KaYP,oCbfJ,0BAMI,MAAO,MAIX,uBsB1DE,QJRQ,SlBoER,WAAY,OACZ,OAAQ,MAEV,wBsB/DE,QJRQ,SlByER,OAAQ,KACR,WAAY,OAHd,0BAKI,MN9DI,QM+DJ,UMhDU,UNoDd,aiB1BM,QAAS,MAeT,aCtEI,SDuEJ,MC5EI,UlBwFR,aAAc,IACd,MAAO,MAHT,wBiBPQ,aAA6B,EJHjC,oCbUJ,aAKI,aAAc,KiBlCd,MAAM,KAGJ,QAAS,MAQT,MAAO,UjBkBb,wBiBfQ,MCvEE,WL4EN,oCbUJ,aASI,aAAc,IiBtCd,MAAM,KAGJ,QAAS,MAQT,MAAO,UjBkBb,wBiBfQ,MCvEE","file":"main.min.css","sourcesContent":["/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */img,legend{border:0}legend,td,th{padding:0}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}table{border-collapse:collapse;border-spacing:0}","fieldset {\n  background-color: $base-background-color;\n  border: $base-border;\n  margin: 0 0 $small-spacing;\n  padding: $base-spacing;\n}\n\ninput,\nlabel,\nselect {\n  display: block;\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n}\n\nlabel {\n  font-weight: 600;\n  margin-bottom: $small-spacing / 2;\n\n  &.required::after {\n    content: \"*\";\n  }\n\n  abbr {\n    display: none;\n  }\n}\n\n#{$all-text-inputs},\nselect[multiple=multiple] {\n  background-color: $base-background-color;\n  border: none;\n  border-bottom: $base-border;\n  box-sizing: border-box;\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n  margin-bottom: $small-spacing;\n  padding: $base-spacing / 3;\n  transition: border-color $base-duration $base-timing;\n  width: 100%;\n\n  ::-webkit-input-placeholder { color: $base-font-color;}\n  :-moz-placeholder { color: $base-font-color;}\n  ::-moz-placeholder {color: $base-font-color;}\n  :-ms-input-placeholder {color: $base-font-color;}\n\n  &:hover {\n    border-color: shade($base-border-color, 5%);\n  }\n\n  &:focus {\n    border-color: $base-border-color;\n    outline: none;\n  }\n\n  &:disabled {\n    background-color: shade($base-background-color, 5%);\n    cursor: not-allowed;\n\n  }\n}\n\ntextarea {\n  resize: vertical;\n}\n\ninput[type=\"search\"] {\n  appearance: none;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  display: inline;\n  margin-right: $small-spacing / 2;\n\n  + label {\n    display: inline-block;\n  }\n}\n\ninput[type=\"file\"] {\n  margin-bottom: $small-spacing;\n  width: 100%;\n}\n\n.select-style {\n  padding: 0;\n  margin: 0 auto;\n  border: $base-border;\n  width: 60%;\n  overflow: hidden;\n  background: url(../vendor/ionicons/src/arrow-down-b.svg) $white right no-repeat;\n  background-size: 10% 95%;\n  &:hover {\n    background-color: $action-color;\n  }\n  select {\n    padding: .2em;\n    border: none;\n    box-shadow: none;\n    background-color: transparent;\n    background-image: none;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance:none;\n    //margin-bottom: $base-spacing;\n    //max-width: 130%;\n    width: 110%;\n    &:focus {\n      outline: none;\n    }\n  }\n}\n",":root {\n  color: $base-font-color;\n  font-family: $base-font-family;\n  font-feature-settings: \"kern\", \"liga\", \"pnum\";\n  font-size: $base-font-size;\n  line-height: $base-line-height;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  line-height: $heading-line-height;\n  margin: 0 0 $small-spacing;\n}\n\nh1 {\n  font-family: $black-font-family;\n  font-size:   $huge-font-size;\n}\nh2 {\n  font-family: $bold-font-family;\n  font-size:   $large-heading-font-size;\n}\nh3 {\n  font-family: $bold-font-family;\n  font-size:   $small-heading-font-size;\n}\nh4,\nh5,\nh6 {\n  font-family: $bold-font-family;\n  font-size: $base-font-size;\n}\n\n\nfooter {\n  span {\n    font-family: $light-font-family;\n    font-size: $small-font-size;\n  }\n}\n\np {\n  margin: 0 0 $small-spacing;\n}\n\na {\n  color: $action-color;\n  text-decoration: none;\n  transition: color $base-duration $base-timing;\n\n  &:active,\n  &:focus,\n  &:hover {\n    color: shade($action-color, 25%);\n  }\n}\n\nhr {\n  border-bottom: $base-border;\n  border-left: 0;\n  border-right: 0;\n  border-top: 0;\n  margin: $base-spacing 0;\n}\n\nimg,\npicture {\n  margin: 0;\n  max-width: 100%;\n}\n","// Typography\n$base-font-family    : 'noyh-regular',$helvetica;\n$black-font-family   : 'noyh-black',$helvetica;\n$bold-font-family    : 'noyh-bold',$helvetica;\n$light-font-family   : 'noyh-light',$helvetica;\n$italic-font-family  : 'noyh-italic',$helvetica;\n\n// Font Sizes\n$small-font-size         : modular-scale(-1);\n$base-font-size          : modular-scale(1);\n$small-heading-font-size : modular-scale(2);\n$large-heading-font-size : modular-scale(3);\n$huge-font-size          : modular-scale(4);\n\n// Line height\n$base-line-height    : 1.5;\n$heading-line-height : 1.2;\n\n// Other Sizes\n$base-spacing       : $base-line-height * 1em;\n$small-spacing      : $base-spacing / 2;\n$base-z-index       : 0;\n\n//Color Pallet\n$light-blue: #0451AA;\n$blue: #02326B;\n$dark-blue: #03142B;\n$green: #3B6058;\n$white: #FEFFFE;\n$black: #060D19;\n$red: #832232;\n$yellow: #FFCC33;\n$gray-dark: #303949;\n$gray: tint($gray-dark, 50%);\n$gray-light: tint($gray-dark, 75%);\n$facebook-blue: #3B5999;\n$twitter-blue: #55ACEE;\n\n// Font Colors\n$base-font-color      : $black;\n$nav-font-color       : $white;\n$action-color         : $light-blue;\n\n//Background Colors\n$base-background-color     : $white;\n$nav-background-color      : $blue;\n$block-background-color    : $gray-dark;\n$header-background-color   : $blue;\n$partials-background-color : $white;\n$content-background-color  : $white;\n$game-background-color     : shade($white, 20%);\n\n// Border\n$base-border-color : $black;\n$base-border       : 3px solid $base-border-color;\n$box-shadow-color  : $gray-dark;\n\n//Background Images\n$hero-bg-image : '../images/stock/football.jpg';\n\n// Animations\n$base-duration : 150ms;\n$base-timing   : ease;\n",null,"//File Name: ./dev/sass/base/_game.scss\n.games {\n  // margin: 0 auto 0 1em;\n  h1 {\n    margin-top: .7em;\n    text-align: center;\n  }\n  @include media($mobile){\n    width: 100%;\n  }\n}\n.game {\n  background: $content-background-color;\n  border: $base-border;\n  box-shadow: 0 2px 4px darken($nav-background-color, 10%);\n  margin-bottom: 1em;\n  text-align: center;\n  @include display(flex);\n  @include flex-direction(row);\n  @include flex-wrap(nowrap);\n  @include align-content(center);\n\n}\n\n.game-info {\n  width: 100%;\n  padding : 2.5em 1em 1em 1em;\n  h2 {\n    line-height: 2.5em;\n  }\n\n}\n\n.home,\n.away {\n  background: $game-background-color;\n  &:hover {\n    @include transition(all 0.2s ease-in-out);\n    background: $action-color;\n    cursor: pointer;\n  }\n}\n\n.home {\n  border-right: $base-border;\n}\n.away {\n  border-left: $base-border;\n}\n","header {\n  @include display(flex);\n  @include flex-direction(row);\n  @include flex-wrap(nowrap);\n  @include justify-content(center);\n  @include align-content(center);\n  background: $partials-background-color;\n  border-bottom: 3px solid $black;\n  width: 100%;\n  float: right;\n  @include padding(0.5em 1em 0.5em 2em);\n\n  .header__logo{\n    @include order(0);\n    @include align-self(center);\n    font-size: $small-heading-font-size;\n    font-family: $black-font-family;\n    text-align: center;\n    width: 100%;\n  }\n  .header__button{\n    @include order(1);\n    @include flex-basis(15em);\n    @include align-self(center);\n    width: 100%;\n    text-align: center;\n  }\n}\n\n\n\n\n\n//footer\n\n.footer {\n  $base-spacing: 1.5em !default;\n  $action-color: #477DCA !default;\n  $medium-screen: em(640) !default;\n  $large-screen: em(860) !default;\n  $footer-background: $white;//desaturate(darken($action-color, 20%), 30%);\n  $footer-color: $black;\n  $footer-link-color: $footer-color;\n  $footer-disclaimer-color: transparentize($footer-color, 0.5);\n\n  background: $partials-background-color;\n  padding: $base-spacing;\n  width: 100%;\n  margin-bottom: 0;\n\n  @include media($medium-screen) {\n    display: inline-block;\n  }\n\n  .footer-wrapper {\n    @include outer-container;\n    @include media($medium-screen) {\n      display: block;\n    }\n  }\n\n  .footer-logo {\n    margin-right: 1em;\n    margin-bottom: 1em;\n\n    img {\n      height: 1.6em;\n      background: $red;\n    }\n\n    @include media($large-screen) {\n      float: left;\n      margin-bottom: 0;\n    }\n  }\n\n\n\n\n  ul {\n    line-height: 1.5em;\n    margin: 0 0 1em 0;\n    padding: 0;\n\n    @include media($large-screen) {\n      float: left;\n      line-height: 1.8em;\n      margin-left: 1em;\n      margin-bottom: 0;\n    }\n  }\n\n  ul li {\n    list-style: none;\n    padding-right: 1em;\n\n    @include media($large-screen) {\n      display: inline;\n      text-align: left;\n    }\n  }\n\n  ul li a {\n    color: $footer-link-color;\n    text-decoration: none;\n\n    &:focus,\n    &:hover {\n      color: $action-color;\n    }\n  }\n\n  .footer-secondary-links {\n    @include media($large-screen) {\n      float: right;\n    }\n\n    li {\n      font-size: 0.8em;\n    }\n\n    ul.footer-social {\n      margin: 1em 0 0 0;\n\n      @include media($large-screen) {\n        float: right;\n        margin-top: 0;\n      }\n\n      li {\n        font-size: 1em;\n        float: left;\n        line-height: 0;\n        margin: 0;\n        padding-right: 0.7em;\n\n        &:last-child {\n          padding-right: 0;\n        }\n      }\n\n    span {\n      font-size: $base-font-size;\n    }\n      img {\n        height: 1.6em;\n        opacity: 0.7;\n        padding: 1px;\n\n        &:focus,\n        &:hover {\n          opacity: 1;\n        }\n      }\n    }\n  }\n\n}\n","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  } @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  } @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: normal;\n\n  @if $value == row {\n    $value-2009: horizontal;\n  } @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  } @else if $value == column {\n    $value-2009: vertical;\n  } @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @include prefixer(box-direction, $direction, webkit moz spec);\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  } @else if $value == wrap {\n    $alt-value: multiple;\n  } @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  } @else if $value == \"space-between\" {\n    $alt-value: justify;\n  } @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  } @else if $value == \"space-between\" {\n    $value-2011: justify;\n  } @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n","html {\n  height: 100%;\n}\nbody {\n  background: $base-background-color;\n  min-height: 100%;\n  height: 100%;\n  margin: 0;\n}\n\na {\n  color: $base-font-color;\n  &:hover {\n    color: $action-color;\n  }\n}\n\n.page-wrap {\n  min-height: 100%;\n  //margin-bottom: 106.969px;\n}\n.page-wrap:after {\n  content: \"\";\n  display: block;\n}\n.page-wrap:after {\n  //height: 106.969px;\n}\n\n.index {\n  width: 100%;\n}\n\n.hero {\n  height: 800px;\n  @include background(url($hero-bg-image), no-repeat bottom);\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  background-size: cover;\n}\n\n.hero__content {\n  background: rgba($gray-light,0.5);\n  width: 80%;\n  margin: 0 auto;\n  text-align: center;\n}\n\n.blocks {\n\n}\n\n.blocks__block {\n  @include span-columns(4 of 16, block-collapse);\n  background: $partials-background-color;\n  height: 300px;\n  border: none;\n  border-bottom: $base-border;\n  border-right: $base-border;\n  @include media($desktop) {\n    @include span-columns(3 of 12, block-collapse);\n  }\n  @include media($tablet) {\n    @include span-columns(4 of 8, block-collapse);\n    width: 50%;\n  }\n  @include media($mobile) {\n    @include span-columns(4 of 4, block-collapse);\n  }\n}\n.blocks__block:last-child {\n  border-right: none;\n  @include media($tablet) {\n    width: 50%;\n  }\n  @include media($mobile) {\n    width: 100%;\n  }\n}\n\n.blocks__block--header {\n  @include pad();\n  text-align: center;\n  height: 115px;\n}\n.blocks__block--content {\n  @include pad();\n  height: 100%;\n  text-align: center;\n  i {\n    color: $base-font-color;\n    font-size: $huge-font-size;\n  }\n}\n\n.angular-app {\n  @include span-columns(12 of 16);\n  padding-left: 1em;\n  float: right;\n  @include media($tablet){\n    padding-left: 10em;\n    @include span-columns(7 of 8, block-collapse);\n  }\n  @include media($mobile){\n    padding-left: 4em;\n    @include span-columns(3 of 4, block-collapse);\n  }\n}\n","@charset \"UTF-8\";\n\n@if $border-box-sizing == true {\n  html { // http://bit.ly/1qk2tVR\n    box-sizing: border-box;\n  }\n\n  * {\n    &,\n    &::after,\n    &::before {\n      box-sizing: inherit;\n    }\n  }\n}\n","@mixin font-face(\n  $font-family,\n  $file-path,\n  $weight: normal,\n  $style: normal,\n  $asset-pipeline: $asset-pipeline,\n  $file-formats: eot woff2 woff ttf svg) {\n\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\n\n  @font-face {\n    font-family: $font-family;\n    font-style: $style;\n    font-weight: $weight;\n\n    src: font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats,\n      $font-url-prefix\n    );\n  }\n}\n","//Noyh Black\n@include font-face(\"noyh-black\", \"/assets/fonts/noyh/noyh-black-webfont\", bolder, $file-formats: eot woff2 woff ttf svg);\n//Noyh Bold\n@include font-face(\"noyh-bold\", \"/assets/fonts/noyh/noyh-bold-webfont\", bold, $file-formats: eot woff2 woff ttf svg);\n//Noyh Regular\n@include font-face(\"noyh-regular\", \"/assets/fonts/noyh/noyh-regular-webfont\", normal, $file-formats: eot woff2 woff ttf svg);\n//Noyh Light\n@include font-face(\"noyh-light\", \"/assets/fonts/noyh/noyh-light-webfont\", lighter, $file-formats: eot woff2 woff ttf svg);\n//Noyh Italic\n@include font-face(\"noyh-italic\", \"/assets/fonts/noyh/noyh-italic-webfont\", normal, italic, $file-formats: eot woff2 woff ttf svg);\n","// Used for creating the source string for fonts using @font-face\n// Reference: http://goo.gl/Ru1bKP\n\n@function font-url-prefixer($asset-pipeline) {\n  @if $asset-pipeline == true {\n    @return font-url;\n  } @else {\n    @return url;\n  }\n}\n\n@function font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats,\n  $font-url) {\n\n  $src: ();\n\n  $formats-map: (\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\n  );\n\n  @each $key, $values in $formats-map {\n    @if contains($file-formats, $key) {\n      $file-path: nth($values, 1);\n      $font-format: nth($values, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    }\n  }\n\n  @return $src;\n}\n","@charset \"UTF-8\";\n\n/// Georgia font stack.\n///\n/// @type List\n\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\n\n/// Helvetica font stack.\n///\n/// @type List\n\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n\n/// Lucida Grande font stack.\n///\n/// @type List\n\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\n\n/// Monospace font stack.\n///\n/// @type List\n\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\n\n/// Verdana font stack.\n///\n/// @type List\n\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\n","// Scaling Variables\n$golden:           1.618;\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n\n$modular-scale-ratio: $perfect-fourth !default;\n$modular-scale-base: em($em-base) !default;\n\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n","#{$all-buttons} {\n  appearance: none;\n  background-color: $white;\n  border: 3px solid $black;\n  color: $black;\n  cursor: pointer;\n  display: inline-block;\n  font-family: $base-font-family;\n  font-size: $base-font-size;\n  -webkit-font-smoothing: antialiased;\n  font-weight: 600;\n  line-height: 1;\n  padding: $small-spacing $base-spacing;\n  text-decoration: none;\n  transition: background-color $base-duration $base-timing;\n  user-select: none;\n  vertical-align: middle;\n  white-space: nowrap;\n\n  &:hover,\n  &:focus {\n    background-color: $yellow;\n    color: $black;\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n\n    &:hover {\n      background-color: $yellow;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n///\n/// @return {Color}\n\n@function shade($color, $percent) {\n  @return mix(#000, $color, $percent);\n}\n","ul,\nol {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  &%default-ul {\n    list-style-type: disc;\n    margin-bottom: $small-spacing;\n    padding-left: $base-spacing;\n  }\n\n  &%default-ol {\n    list-style-type: decimal;\n    margin-bottom: $small-spacing;\n    padding-left: $base-spacing;\n  }\n}\n\ndl {\n  margin-bottom: $small-spacing;\n\n  dt {\n    font-weight: bold;\n    margin-top: $small-spacing;\n  }\n\n  dd {\n    margin: 0;\n  }\n}\n","nav {\n  @include span-columns(4 of 16);\n  @include display(flex);\n  @include flex-direction(column);\n  @include justify-content(center);\n  @include align-items(stretch);\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  background: $nav-background-color;\n  color: $nav-font-color;\n  border-right: $base-border;\n  box-shadow: 2px 2px 4px darken($nav-background-color, 10%);\n\n  @include media($tablet){\n    @include span-columns(1 of 8, block-collapse);\n    @include display(flex);\n    @include flex-direction(column);\n    @include justify-content(center);\n    @include align-items(stretch);\n  }\n}\n\nnav > a {\n  @include flex(1);\n  font-family: $bold-font-family;\n  font-size: $small-heading-font-size;\n  padding-top: 4em;\n  line-height: 1em;\n  color: $nav-font-color;\n  text-align: center;\n  i {\n    display: none;\n  }\n  &:hover, {\n    background: $action-color;\n    color: $base-font-color;\n  }\n  @include media($desktop){\n    padding-top: 3em;\n    line-height: 1em;\n  }\n  @include media($tablet){\n    padding-top: 4em;\n    i {\n      display: block;\n    }\n    span {\n      display: none;\n    }\n  }\n}\n\nnav > a{\n  border-top: 3px solid $nav-font-color;\n}\nnav > a:first-of-type {\n  border-top: none;\n}\n\n\nnav.open {\n\n}\nnav.close {\n\n}\n","@charset \"UTF-8\";\n\n/// Directional-property mixins are shorthands for writing properties like the following\n///\n/// @ignore You can also use `false` instead of `null`.\n///\n/// @param {List} $vals\n///   List of directional values\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dotted null);\n///     @include margin(null 0 10px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: dotted;\n///     border-top-style: dotted;\n///     margin-bottom: 10px;\n///     margin-left: 0;\n///     margin-right: 0;\n///   }\n///\n/// @require {function} contains-falsy\n///\n/// @return {List}\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $a: nth($vals, 1);\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\n  @else if $b == $d                      { $output: $a $b $c;    }\n  @else                                  { $output: $a $b $c $d; }\n\n  @return $output;\n}\n\n/// Output directional properties, for instance `margin`.\n///\n/// @access private\n///\n/// @param {String} $pre\n///   Prefix to use\n/// @param {String} $suf\n///   Suffix to use\n/// @param {List} $vals\n///   List of values\n///\n/// @require {function} collapse-directionals\n/// @require {function} contains-falsy\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n  } @else {\n    #{$all}: $vals;\n  }\n}\n","//File Name: ./dev/sass/base/_leaderboard.scss\n.leaderboard {\n  @include display(flex);\n  @include flex-direction(column);\n  @include flex-wrap(nowrap);\n  @include justify-content(flex-start);\n  @include align-content(center);\n  width: 100%;\n  h1 {\n    margin-top: .7em;\n    text-align: center;\n  }\n}\n\n.leaderboard__playerlist {\n  width: 100%;\n  border: $base-border;\n}\n\n.leaderboard__player,\n.leaderboard__header {\n  @include display(flex);\n  @include flex-direction(row);\n  @include flex-wrap(nowrap);\n  @include justify-content(center);\n  @include align-content(center);\n  line-height: 3em;\n  background: $white;\n  border-bottom: $base-border;\n}\n\n.leaderboard__player:last-of-type {\n  border: none;\n}\n\n.player__picture,\n.header__name,\n.player__name,\n.header__points,\n.player__points {\n  width: 100%;\n  text-align: center;\n  @include align-self(center);\n}\n.header__name,\n.header__points {\n  font-family: $bold-font-family;\n  font-size: $small-heading-font-size;\n}\n\n.player__picture {\n  @include flex-basis(10em);\n  padding: 1.5em 1em 1em 1em;\n  img {\n    border: $base-border;\n  }\n}\n\n.player__name,\n.player__points {\n  font-size: $small-heading-font-size;\n}\n","@charset \"UTF-8\";\n\n/// Outputs a media-query block with an optional grid context (the total number of columns used in the grid).\n///\n/// @param {List} $query\n///   A list of media query features and values, where each `$feature` should have a corresponding `$value`.\n///   For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).\n///\n///   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.\n///\n///   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`).\n///\n///\n/// @param {Number (unitless)} $total-columns [$grid-columns]\n///   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.\n///\n/// @example scss - Usage\n///   .responsive-element {\n///      @include media(769px) {\n///        @include span-columns(6);\n///      }\n///   }\n///\n///  .new-context-element {\n///    @include media(min-width 320px max-width 480px, 6) {\n///      @include span-columns(6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///  @media screen and (min-width: 769px) {\n///    .responsive-element {\n///      display: block;\n///      float: left;\n///      margin-right: 2.35765%;\n///      width: 48.82117%;\n///    }\n///\n///    .responsive-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n///\n///  @media screen and (min-width: 320px) and (max-width: 480px) {\n///    .new-context-element {\n///      display: block;\n///      float: left;\n///      margin-right: 4.82916%;\n///      width: 100%;\n///    }\n///\n///    .new-context-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n\n@mixin media($query: $feature $value $columns, $total-columns: $grid-columns) {\n  @if length($query) == 1 {\n    @media screen and ($default-feature: nth($query, 1)) {\n      $default-grid-columns: $grid-columns;\n      $grid-columns: $total-columns !global;\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  } @else {\n    $loop-to: length($query);\n    $media-query: \"screen and \";\n    $default-grid-columns: $grid-columns;\n    $grid-columns: $total-columns !global;\n\n    @if is-not(is-even(length($query))) {\n      $grid-columns: nth($query, $loop-to) !global;\n      $loop-to: $loop-to - 1;\n    }\n\n    $i: 1;\n    @while $i <= $loop-to {\n      $media-query: $media-query + \"(\" + nth($query, $i) + \": \" + nth($query, $i + 1) + \") \";\n\n      @if ($i + 1) != $loop-to {\n        $media-query: $media-query + \"and \";\n      }\n\n      $i: $i + 2;\n    }\n\n    @media #{$media-query} {\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Makes an element a outer container by centring it in the viewport, clearing its floats, and setting its `max-width`.\n/// Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.\n///\n/// @param {Number [unit]} $local-max-width [$max-width]\n///   Max width to be applied to the element. Can be a percentage or a measure.\n///\n/// @example scss - Usage\n///   .element {\n///     @include outer-container(100%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     *zoom: 1;\n///     max-width: 100%;\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n///   .element:before, .element:after {\n///     content: \" \";\n///     display: table;\n///   }\n///\n///   .element:after {\n///     clear: both;\n///   }\n\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\n","// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.\n///\n/// @param {List} $span\n///   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).\n///\n///   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.\n///\n///   The values can be separated with any string such as `of`, `/`, etc.\n///\n///   `$columns` also accepts decimals for when it's necessary to break out of the standard grid. E.g. Passing `2.4` in a standard 12 column grid will divide the row into 5 columns.\n///\n/// @param {String} $display [block]\n///   Sets the display property of the element. By default it sets the display propert of the element to `block`.\n///\n///   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.\n///\n///   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.\n///\n/// @example scss - Usage\n///   .element {\n///     @include span-columns(6);\n///\n///    .nested-element {\n///      @include span-columns(2 of 6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: block;\n///     float: left;\n///     margin-right: 2.35765%;\n///     width: 48.82117%;\n///   }\n///\n///   .element:last-child {\n///     margin-right: 0;\n///   }\n///\n///   .element .nested-element {\n///     display: block;\n///     float: left;\n///     margin-right: 4.82916%;\n///     width: 30.11389%;\n///   }\n///\n///   .element .nested-element:last-child {\n///     margin-right: 0;\n///   }\n\n@mixin span-columns($span: $columns of $container-columns, $display: block) {\n  $columns: nth($span, 1);\n  $container-columns: container-span($span);\n\n  $parent-columns: get-parent-columns($container-columns) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  $display-table: is-display-table($container-display-table, $display);\n\n  @if $display-table  {\n    display: table-cell;\n    width: percentage($columns / $container-columns);\n  } @else {\n    float: #{$opposite-direction};\n\n    @if $display != no-display {\n      display: block;\n    }\n\n    @if $display == collapse {\n      @include -neat-warn(\"The 'collapse' argument will be deprecated. Use 'block-collapse' instead.\");\n    }\n\n    @if $display == collapse or $display == block-collapse {\n      width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);\n\n      &:last-child {\n        width: flex-grid($columns, $container-columns);\n      }\n\n    } @else {\n      margin-#{$direction}: flex-gutter($container-columns);\n      width: flex-grid($columns, $container-columns);\n\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n  }\n}\n","$parent-columns: $grid-columns !default;\n$fg-column: $column;\n$fg-gutter: $gutter;\n$fg-max-columns: $grid-columns;\n$container-display-table: false !default;\n$layout-direction: LTR !default;\n\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n}\n\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n}\n\n@function get-parent-columns($columns) {\n  @if $columns != $grid-columns {\n    $parent-columns: $columns !global;\n  } @else {\n    $parent-columns: $grid-columns !global;\n  }\n\n  @return $parent-columns;\n}\n\n@function is-display-table($container-is-display-table, $display) {\n  @return $container-is-display-table == true or $display == table;\n}\n",".profile {\n  h1 {\n    text-align: center;\n  }\n}\n\n.profile__header {\n  img {\n    width: 200px;\n    border: $base-border;\n    display: block;\n    margin: 1em auto;\n  }\n}\n\n.profile__content {\n\n}\n","//************************************************************************//\n// Background property for adding multiple backgrounds using shorthand\n// notation.\n//************************************************************************//\n\n@mixin background($backgrounds...) {\n  $webkit-backgrounds: ();\n  $spec-backgrounds: ();\n\n  @each $background in $backgrounds {\n    $webkit-background: ();\n    $spec-background: ();\n    $background-type: type-of($background);\n\n    @if $background-type == string or $background-type == list {\n      $background-str: if($background-type == list, nth($background, 1), $background);\n\n      $url-str:       str-slice($background-str, 1, 3);\n      $gradient-type: str-slice($background-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n    }\n\n    @else {\n      $webkit-background: $background;\n      $spec-background:   $background;\n    }\n\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\n  }\n\n  background: $webkit-backgrounds;\n  background: $spec-backgrounds;\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n","@charset \"UTF-8\";\n\n/// Adds padding to the element.\n///\n/// @param {List} $padding [flex-gutter()]\n///   A list of padding value(s) to use. Passing `default` in the list will result in using the gutter width as a padding value.\n///\n/// @example scss - Usage\n///   .element {\n///     @include pad(30px -20px 10px default);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     padding: 30px -20px 10px 2.35765%;\n///   }\n\n@mixin pad($padding: flex-gutter()) {\n  $padding-list: null;\n  @each $value in $padding {\n    $value: if($value == 'default', flex-gutter(), $value);\n    $padding-list: join($padding-list, $value);\n  }\n  padding: $padding-list;\n}\n"],"sourceRoot":"/source/"}